---
- name: Hello World
  hosts: all
  #sudo: yes
  tasks:
    - name: Installs nginx web server
      apt:
        pkg: nginx
        state: present
        update_cache: true
      notify:
        - start nginx
      tags: web

    - name: remove /etc/nginx/sites-available/default
      file:
        path: /etc/nginx/sites-available/default
        state: absent
      tags: web

    - name: remove /etc/nginx/sites-enabled/default
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      tags: web

    - name: Move our config file into place
      command: mv /home/vagrant/tornado.conf /etc/nginx/conf.d/tornado.conf
      notify:
        - start nginx
      tags: web

    - name: install prerequisites
      #sudo: true
      apt: name={{ item }} state=latest
      with_items:
        - python-apt
        - python
        - python-pycurl
        - python-pip
        - python-tornado
        - libpq-dev
        - python-dev
        - python-psycopg2    
      tags: app

    - name: Install Postgresql
      apt: pkg={{ item }} state=present
      register: postgresql_install
      with_items:
        - postgresql
        - postgresql-contrib
        - python-psycopg2
      tags: db

    - name: Lets create a db
      #sudo: yes
      #sudo_user: postgres
      postgresql_db:
        name: alvin_generator
        state: present
      tags: db

    - name: Create a table
      #sudo: yes
      #sudo_user: postgres
      command: psql alvin_generator -c 'CREATE TABLE IF NOT EXISTS alvin (foo varchar(40));'
      tags: db

    - name: I guess we should put some data in it
      #sudo: yes
      #sudo_user: postgres
      command: psql alvin_generator -c "INSERT INTO alvin VALUES ('bar');"
      tags: db

    - name: Lets see whats in the table
      #sudo: yes
      #sudo_user: postgres
      command: psql alvin_generator -c 'select * from alvin;'
      tags: db

    - name: start tornado
      #sudo: yes
      #sudo_user: postgres
      shell: nohup python /home/vagrant/webserver.py &
      tags: app

  handlers:
    - name: start nginx
      service: name=nginx state=started
      tags: web
